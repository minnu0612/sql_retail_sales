
CREATE database project_1;

CREATE TABLE retail_sales (
                     transactions_id INT PRIMARY KEY,
					 sale_date DATE,
                     sale_time TIME,
                     customer_id INT,
                     gender VARCHAR(10),
                     age INT,
                     category  VARCHAR(25),
                     quantiy INT,
					 price_per_unit FLOAT,
                     cogs  FLOAT,
                     total_sale FLOAT
);
SELECT * FROM retail_sales
limit 2000;
select count(*) from retail_sales;
select count(customer_id) from retail_sales;
SELECT * FROM retail_sales
where transactions_id is NULL;
SELECT * FROM retail_sales
where sale_time is NULL;
SELECT * FROM retail_sales
WHERE transactions_id is NULL OR sale_date is NULL OR sale_time is NULL OR gender is NULL or customer_id is NULL 
OR age is NULL or cogs is NULL or total_sale is null or category is null or quantiy is null;

-- how many customers do we have?

select count(*) from retail_sales;

-- how many unique customers we have?
select count(distinct customer_id) as total_sales from retail_sales;

-- Different category in DB
select distinct category from retail_sales;

-- Q.1 Write a SQL query to retrieve all columns for sales made on '2022-11-05

select * from retail_sales
where sale_date = '2022-11-05';

-- Q.2 Write a SQL query to retrieve all transactions where the category is 'Clothing' and the quantity sold is more than 4in the month of Nov-2022
-- Q.2 Write a SQL query to retrieve all transactions where the category is 'Clothing'
-- and the quantity sold is more than 4 in the month of Nov-2022

SELECT * 
FROM retail_sales
WHERE category = 'Clothing'
  AND DATE_FORMAT(sale_date, '%Y-%m') = '2022-11'
  AND quantiy >= 4;

-- Q.3 Write a SQL query to calculate the total sales (total_sale) for each category.
select sum(total_sale) as net_sales,
category
from retail_sales
group by category;

-- Q.4 Write a SQL query to find the average age of customers who purchased items from the 'Beauty' category.
select ROUND(avg(age), 2) as avg_age from retail_sales
where category = 'Beauty';

-- Q.5 Write a SQL query to find all transactions where the total_sale is greater than 1000.
select * from retail_sales
where total_sale > 1000;

-- Q.6 Write a SQL query to find the total number of transactions (transaction_id) made by each gender in each category.
select count(transactions_id) as total_trans, category, gender from retail_sales
group by gender,category
order by category;


-- Q.7 Write a SQL query to calculate the average sale for each month. Find out best selling month in each year
select year, month, round(avg_sale, 2) from (
select 
 extract(year from sale_date) as year,
extract(month from sale_date) as month,
avg(total_sale) as avg_sale,
rank() over (partition by extract(YEAR from sale_date) order by avg(total_sale) desc) as rnk
from retail_sales
group by year, month 
) as t1
where rnk = 1;


-- Q.8 Write a SQL query to find the top 5 customers based on the highest total sales 

select sum(total_sale) as net_sale, customer_id from retail_sales
group by customer_id
order by net_sale desc
limit 5;


-- Q.9 Write a SQL query to find the number of unique customers who purchased items from each category.

select count(distinct customer_id) as uni_customer, category from retail_sales
group by category;


-- Q.10 Write a SQL query to create each shift and number of orders (Example Morning <=12, Afternoon Between 12 & 17, Evening >17)

with hourly_sale
AS
(select * ,
CASE
when extract(hour from sale_time) <= 12 then 'Morning'
when extract(hour from sale_time) between 12 and 17 then 'Afternoon'
else 'Evening'
END as shift
from retail_sales
)
select shift, count(*) as total_orders from hourly_sale
group by shift;

-- end of project








